// Generated by CoffeeScript 1.12.7
(function() {
  jQuery(document).ready(function() {
    var currentGame, getParam, load, processData, puzzleGame, retrieveResources, storyMode;
    getParam = function(name) {
      var results;
      results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
      return results[1] || 0;
    };
    puzzleGame = (function() {
      function puzzleGame(debug, xsplit, ysplit, amount1) {
        this.debug = debug;
        this.xsplit = xsplit;
        this.ysplit = ysplit;
        this.amount = amount1;
        this.timePassed;
      }

      puzzleGame.prototype.init = function(resources) {
        var resourceLimit;
        this.resources = resources;
        this.resources.sort(function() {
          return 0.5 - Math.random();
        });
        resourceLimit = this.resources.slice(0, this.amount);
        this.solution = resourceLimit[Math.floor(Math.random() * resourceLimit.length)];
        this.reset();
        this.generateChoiceField(resourceLimit);
        this.generateTiles();
        return this.initTimer();
      };

      puzzleGame.prototype.initTimer = function() {
        var counter, time;
        time = 0;
        counter = function() {
          time += 1;
          $('#timer').text('Time: ' + time);
          return $('#timer').attr('value', time);
        };
        return this.timer = setInterval(counter, 1000);
      };

      puzzleGame.prototype.generateTiles = function() {
        var col, i, imgHeight, imgWidth, row, tile, tileHeight, tileTemplate, tileWidth, tiles;
        tileTemplate = $('#tileTemplate');
        tiles = this.xsplit * this.ysplit;
        imgWidth = $('#tileTemplate').width();
        imgHeight = $('#tileTemplate').height();
        tileWidth = imgWidth / this.xsplit;
        tileHeight = imgHeight / this.ysplit;
        i = 0;
        col = 0;
        while (col < this.ysplit) {
          row = 0;
          while (row < this.xsplit) {
            tile = $(tileTemplate.clone());
            tile.draggable({
              containment: $('#gameArea'),
              snap: true,
              snapMode: "both"
            });
            tile.show();
            tile.addClass('tile');
            tile.removeAttr('id', '');
            tile.css({
              'background-image': 'url(' + this.solution['High resolution image'] + ')',
              'background-position': -row * tileWidth + 'px ' + -col * tileHeight + 'px',
              'width': tileWidth,
              'height': tileHeight,
              'left': Math.floor(Math.random() * 50) + 'px',
              'top': Math.floor(Math.random() * 50) + 'px'
            });
            $('#gameArea').append(tile);
            i++;
            row++;
            if (this.debug) {
              console.log('created', i, 'tile at', row - 1, col);
            }
          }
          col++;
        }
        tileTemplate.hide();
        if (this.debug) {
          console.log('--- Width', imgWidth, 'Height', imgHeight, 'TileWidth', tileWidth, 'TileHight', tileHeight);
          return console.log('solution', this.getAnswer());
        }
      };

      puzzleGame.prototype.generateChoiceField = function(choices) {
        var choice, i, j, len, results1;
        i = 1;
        results1 = [];
        for (j = 0, len = choices.length; j < len; j++) {
          choice = choices[j];
          if (choice === this.solution) {
            $('#selectionArea').append('<div class="choice" id="choice' + i + '"><img class="img-responsive" src="' + choice['Thumbnail image'] + '"</div>');
            this.setAnswerValue(i);
          } else {
            $('#selectionArea').append('<div class="choice" id="choice' + i + '"><img class="img-responsive" src="' + choice['Thumbnail image'] + '"</div>');
          }
          results1.push(i++);
        }
        return results1;
      };

      puzzleGame.prototype.setAnswerValue = function(value) {
        return this.solutionValue = value;
      };

      puzzleGame.prototype.getAnswer = function() {
        return [this.solution, this.solutionValue];
      };

      puzzleGame.prototype.reset = function() {
        $('#selectionArea, #gameArea').empty();
        clearInterval(this.timer);
        return this.time = 0;
      };

      puzzleGame.prototype.gameWin = function() {
        $('.winScreen .timeTaken').text('Time taken ' + $('#timer').attr('value') + ' seconds');
        $('.winScreen').show();
        $('.winScreen img').attr('src', this.solution['High resolution image']);
        $('.winScreen .soldierName').text(this.solution['Full name (from National Archives of Australia)']);
        $('.winScreen .soldierDesc').text(this.solution['Title of image']);
        $('.play').show();
        return this.reset();
      };

      puzzleGame.prototype.gameLose = function() {
        alert('Wrong Answer');
        return $('.play').show();
      };

      return puzzleGame;

    })();
    retrieveResources = function(amount) {
      var reqParam;
      reqParam = {
        resource_id: 'cf6e12d8-bd8d-4232-9843-7fa3195cee1c',
        limit: amount
      };
      return $.ajax({
        url: 'https://data.gov.au/api/action/datastore_search',
        data: reqParam,
        dataType: 'jsonp',
        cache: true
      });
    };
    processData = function(data) {
      var item, j, len, processedData, ref;
      processedData = [];
      ref = data.result.records;
      for (j = 0, len = ref.length; j < len; j++) {
        item = ref[j];
        if (item['High resolution image']) {
          processedData.push(item);
        }
      }
      return processedData;
    };
    load = function() {
      $('#loader').css({
        'opacity': 0,
        'pointer-events': 'none'
      });
      $('body').css('overflow-y', 'auto');
      return setTimeout(function() {
        return $('#loader').css({
          'display': 'none',
          'left': -1 * $('#loader').width()
        });
      }, 1000);
    };
    try {
      storyMode = getParam('story') === 'true';
      if (storyMode) {
        $('#playAgain').text('Continue');
        $('#playAgain').parent().attr('href', 'chapter2.html');
      }
      switch (getParam('diff')) {
        case "easy":
          currentGame = new puzzleGame(false, 4, 4, 20);
          break;
        case "normal":
          currentGame = new puzzleGame(false, 8, 8, 30);
          break;
        case "hard":
          currentGame = new puzzleGame(false, 12, 12, 50);
          break;
        default:
          currentGame = new puzzleGame(false, 4, 4, 20);
      }
      retrieveResources(1000).then(function(res) {
        load();
        return currentGame.init(processData(res));
      });
    } catch (error) {}
    $('.winScreen').hide();
    $('#selectionArea').on('click', '.choice', function() {
      if (parseInt($(this).attr('id').match(/[0-9]+/)) === currentGame.getAnswer()[1]) {
        currentGame.gameWin();
      } else {
        currentGame.gameLose();
      }
    });
    $('#playAgain').click(function() {});
    $('#reset').click(function() {
      currentGame.reset();
    });
  });

}).call(this);
